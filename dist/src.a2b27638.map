{"version":3,"sources":["src/ReactDOM/index.js","src/React/component.js","src/React/index.js","src/index.js"],"names":["rootInstance","render","element","container","prevInstance","nextInstance","reconcile","parentDom","instance","newInstance","instantiate","appendChild","dom","removeChild","type","replaceChild","updateDomProperties","props","childInstances","reconcileChildren","publicInstance","childElement","oldChildInstance","childInstance","nextChildElements","children","newChildInstances","count","Math","max","length","i","newChildInstance","push","filter","createPublicInstance","internalInstance","__internalInstance","updateInstance","parentNode","isDomElement","isTextElement","document","createTextNode","createElement","childElements","map","childDoms","forEach","childDom","Object","assign","prevProps","nextProps","isEvent","name","startsWith","isAttribute","keys","eventType","toLowerCase","substring","removeEventListener","addEventListener","ReactDOM","Component","state","partialState","TEXT_ELEMENT","config","args","hasChildren","rawChildren","concat","c","createTextElement","value","nodeValue","React","TheTime","getElementById"],"mappings":"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","file":"src.a2b27638.map","sourceRoot":"..","sourcesContent":["let rootInstance = null\n\n/**\n * render\n * @param {*} element \n * @param {*} container \n */\nfunction render (element, container) {\n    const prevInstance = rootInstance\n    const nextInstance = reconcile(container, prevInstance, element)\n\n    rootInstance = nextInstance\n}\n\n/**\n * 调度算法函数\n * @param {*} parentDom \n * @param {*} instance 前一次渲染的实例\n * @param {*} element 新一次渲染的虚拟节点\n */\nfunction reconcile (parentDom, instance, element) {\n    if (instance == null) {\n        const newInstance = instantiate(element)\n        parentDom.appendChild(newInstance.dom)\n\n        return newInstance\n    } else if (element == null) {\n        parentDom.removeChild(instance.dom)\n        return null \n    } else if (instance.element.type !== element.type) {\n        const newInstance = instantiate(element)\n        parentDom.replaceChild(newInstance.dom, instance.dom)\n        \n        return newInstance\n    } else if (typeof element.type === 'string') {\n        // 节点没有改变，那么只进行更新属性\n        updateDomProperties(instance.dom, instance.element.props, element.props)\n        // 对孩子数组进行替换\n        instance.childInstances = reconcileChildren(instance, element)\n        instance.element = element\n\n        return instance\n    \n    // 更新组件\n    } else {\n        instance.publicInstance.props = element.props // 更新props\n\n        const childElement = instance.publicInstance.render() // 组件的render函数\n        const oldChildInstance = instance.childInstance\n        const childInstance = reconcile(parentDom, oldChildInstance, childElement) // 子节点对比\n\n        instance.dom = childInstance.dom // 更新dom\n        instance.childInstance = childInstance // 更新虚拟dom树\n        instance.element = element // 更新元素\n\n        return instance\n    }\n}\n\n/**\n * 子节点的递归调度\n * @param {*} instance \n * @param {*} element \n */\nfunction reconcileChildren (instance, element) {\n    const { dom, childInstances } = instance\n    const nextChildElements = element.props.children || []\n    const newChildInstances = []\n\n    const count = Math.max(childInstances.length, nextChildElements.length)\n    for (let i = 0; i < count; i++) {\n        const childInstance = childInstances[i]\n        const childElement = nextChildElements[i]\n        // 对子节点，递归调度函数\n        const newChildInstance = reconcile(dom, childInstance, childElement)\n\n        newChildInstances.push(newChildInstance)\n    }\n\n    return newChildInstances.filter(instance => instance != null)\n}\n\n/**\n * 创建公共实例\n * @param {*} element \n * @param {*} internalInstance \n */\nfunction createPublicInstance (element, internalInstance) {\n    const { type, props } = element\n    // 新建一个实例\n    const publicInstance = new type(props)\n\n    publicInstance.__internalInstance = internalInstance\n\n    return publicInstance\n}\n\n/**\n * 更新实例\n * @param {*} internalInstance \n */\nfunction updateInstance (internalInstance) {\n    const parentDom = internalInstance.dom.parentNode\n    const element = internalInstance.element\n\n    reconcile(parentDom, internalInstance, element)\n}\n\n/**\n * 节点实例\n * @param {*} element \n */\nfunction instantiate (element) {\n    const { type, props } = element\n    const isDomElement = typeof type === 'string'\n\n    if (isDomElement) {\n        /** 1 */\n        // 创建dom节点\n        const isTextElement = type === 'TEXT ELEMENT'\n        const dom = isTextElement\n            ? document.createTextNode('')\n            : document.createElement(type)\n    \n        updateDomProperties(dom, [], props)\n    \n        /** 2 */\n        // 将他的children节点们递归 创建实例\n        const childElements = props.children || []\n        const childInstances = childElements.map(instantiate)\n        /** 3 */\n        const childDoms = childInstances.map(childInstance => childInstance.dom)\n        \n        /** 4 */\n        childDoms.forEach(childDom => dom.appendChild(childDom))\n    \n        const instance = {\n            dom,\n            element,\n            childInstances\n        }\n        return instance\n    } else {\n        const instance = {}\n\n        // 创建公共实例\n        // 1. 新建 newApp = new App()\n        // 2. newApp.__internalInstance = instance\n        // 3. publicInstance = newApp\n        const  publicInstance = createPublicInstance(element, instance)\n\n        const childElement = publicInstance.render()\n\n        const childInstance = instantiate(childElement)\n        const dom = childInstance.dom\n        // 组件元素比普通元素多了一个自身的实例\n        // 组件内部只能有一个子节点，所以是`childInstance`，而不是`childInstances`\n        Object.assign(instance, { dom, element, childInstance, publicInstance })\n\n        return instance\n    }\n}\n\n/**\n * 从dom节点中，删除所有旧属性，添加新属性\n * @param {*} dom \n * @param {*} prevProps \n * @param {*} nextProps \n */\nfunction updateDomProperties (dom, prevProps, nextProps) {\n    const isEvent = name => name.startsWith('on')\n    const isAttribute = name => !isEvent(name) && name !== 'children'\n    \n    // 解绑prev事件\n    Object.keys(prevProps).filter(isEvent).forEach(name => {\n        const eventType = name.toLowerCase().substring(2)\n        dom.removeEventListener(eventType, prevProps[name])\n    })\n\n    // 移除prev属性\n    Object.keys(prevProps).filter(isAttribute).forEach(name => {\n        dom[name] = null\n    })\n\n    // 绑定next事件\n    Object.keys(nextProps).filter(isEvent).forEach(name => {\n        const eventType = name.toLowerCase().substring(2)\n        dom.addEventListener(eventType, nextProps[name])\n    })\n\n    // 设置next属性\n    Object.keys(nextProps).filter(isAttribute).forEach(name => {\n        dom[name] = nextProps[name]\n    })\n}\n\nconst ReactDOM = {\n    render,\n    updateInstance,\n}\n\nexport default ReactDOM\n","import { updateInstance } from '../ReactDOM/index'\n\nexport default class Component {\n    constructor(props = {}) {\n        this.props = props\n        this.state = this.state || {}\n    }\n    \n    setState (partialState) {\n        this.state = Object.assign({}, this.state, partialState)\n        \n        // 内部实例的引用，更新虚拟dom树以及html\n        updateInstance(this.__internalInstance)\n    }\n}","import Component from './component'\n\nconst TEXT_ELEMENT = 'TEXT ELEMENT'\n\nfunction createElement (type, config, ...args) {\n    const props = Object.assign({}, config)\n    const hasChildren = args.length > 0\n    const rawChildren = hasChildren ? [].concat(...args) : []\n\n    // 过滤空值，将文本类型的转成规范数据格式\n    props.children = rawChildren\n        .filter(c => c != null && c !== false)\n        .map(c => c instanceof Object ? c : createTextElement(c))\n\n    return { type, props }\n}\n\nfunction createTextElement (value) {\n    // 规范数据格式\n    return createElement(TEXT_ELEMENT, { nodeValue: value })\n}\n\nconst React = {\n    createElement,\n    Component,\n}\n\nexport default React\n","import React from './React'\nimport ReactDOM from './ReactDOM'\n\n// class Welcome extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             count: 0\n//         }\n\n//         this.handleAddCount = this.handleAddCount.bind(this)\n//     }\n//     componentWillMount () {\n//         console.log('WillMount')\n//     }\n//     componentWillReceiveProps () {\n//         console.log('WillReceiveProps')\n//     }\n//     componentWillUpdate () {\n//         console.log('WillUpdate')\n//     }\n//     componentDidUpdate () {\n//         console.log('DidUpdate')\n//     }\n//     componentDidMount () {\n//         console.log('DidMount')\n//     }\n    \n//     handleAddCount () {\n//         this.setState({\n//             count: this.state.count + 1\n//         })\n//     }\n\n//     render () {\n//         return (\n//             <div>\n//                 <h1>Hello, { this.props.name }</h1>\n//                 <h3>当前数值 <span style={{color: 'red'}}>{ this.state.count }</span></h3>\n//                 <button onClick={this.handleAddCount}>Add</button>\n//             </div>\n//         )\n//     }\n// }\n\n// const element = <Welcome name=\"World\" />\n\n// ReactDOM.render(\n//     element,\n//     document.getElementById('root')\n// )\n\nclass TheTime extends React.Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            count: 0,\n        }\n    }\n\n    render () {\n        const { count } = this.state\n        return (\n            <h1>{ count }</h1>\n        )\n    }\n}\n\nReactDOM.render(<TheTime />, document.getElementById('root'))\n"]}